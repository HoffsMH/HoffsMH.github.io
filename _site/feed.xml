<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HoffsMH</title>
    <description>Small blog for me, the junior developer
</description>
    <link>http://HoffsMH.github.io/</link>
    <atom:link href="http://HoffsMH.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 05 Jan 2016 22:00:14 -0700</pubDate>
    <lastBuildDate>Tue, 05 Jan 2016 22:00:14 -0700</lastBuildDate>
    <generator>Jekyll v3.0.0</generator>
    
      <item>
        <title>Pry neato&#39;s</title>
        <description>&lt;p&gt;This post is an adaptation of a lightning talk I gave. Its basically just some of the tools
and tricks I&amp;#39;ve learned about while using pry and ruby. Hopefully I will come back to it later and make it more like a blog and less like a talk outline. But for now just posting this for some friends!.&lt;/p&gt;

&lt;p&gt;There is some accompanying demo code available at &lt;a href=&quot;https://github.com/HoffsMH/pry-lightning-talk&quot;&gt;github&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h1&gt;Basic neato&amp;#39;s&lt;/h1&gt;

&lt;p&gt;Some random things I&amp;#39;ve found useful that can be used with pry out of the box.
* &lt;code&gt;whereami&lt;/code&gt; to remember where you are in your code&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.&amp;lt;command&amp;gt;&lt;/code&gt; executes terminal commands

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.ls&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.clear&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.git diff&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.git status&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;and yes we can get crazy &lt;code&gt;.ruby &amp;lt;some-other-file&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and assuming your pry doesn&amp;#39;t completely crash when an exception occurs because you are using pry-rescue.
* &lt;code&gt;wtf&lt;/code&gt; and &lt;code&gt;wtf?&lt;/code&gt; to display stack traces for an exception&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;cat -ex&lt;/code&gt; to bring you to the line in your code where the exception occurs&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We can edit a file while in pry then continue to run through it with &lt;code&gt;edit &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;but first we should probably set out editor with&lt;br&gt;
&lt;code&gt;Pry.config.editor = &amp;#39;atom&amp;#39;/&amp;#39;vim&amp;#39;/&amp;#39;whathaveyou&amp;#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;or just include that line in &lt;code&gt;.pryrc&lt;/code&gt; in our home directory&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Other Neato&amp;#39;s&lt;/h2&gt;

&lt;p&gt;Cool ways of using pry.
* &lt;code&gt;binding.pry&lt;/code&gt; is just ruby.&lt;/p&gt;

&lt;p&gt;So we can put a condition on whether or not it runs for when we know when something is going wrong but don&amp;#39;t want to type exit 231 times.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;232&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;binding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pry&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;We can also get pry to be the default debugger in rails by including &lt;code&gt;pry-rails&lt;/code&gt; instead of just &lt;code&gt;pry&lt;/code&gt; in your gemfile&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;
  &lt;span class=&quot;c1&quot;&gt;#gemfile&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:development&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:test&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;pry-rails&#39;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;bundle&lt;/code&gt; then type &lt;code&gt;rails c&lt;/code&gt; and you&amp;#39;re in pry and not irb!&lt;/p&gt;

&lt;h2&gt;Things to install and try&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;h2&gt;&lt;a href=&quot;https://github.com/ariabov/pry-toys&quot;&gt;Pry-toys&lt;/a&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;For when you need to test something for yourself really quick. Really usefull for understanding enumerables.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt; gem install pry-toys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;#### Try&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;toy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# creates a toy has&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;toy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# creates a toy array of Time objects&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;h2&gt;&lt;a href=&quot;https://github.com/deivid-rodriguez/pry-byebug&quot;&gt;Pry-byebug&lt;/a&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;for stepping through code.
Serves as a fine comb to step through and understand code one line at a time.&lt;/li&gt;
&lt;li&gt;was originally a fork of &lt;a href=&quot;https://github.com/nixme/pry-debugger&quot;&gt;pry-debugger&lt;/a&gt; which &lt;a href=&quot;http://stackoverflow.com/questions/24395453/gem-install-debugger-error&quot;&gt;doesn&amp;#39;t work past Ruby version 2.x&lt;/a&gt;
&lt;code&gt;bash
gem install pry-byebug
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;#### Try&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Moves through code line by line&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;continue&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# completes rest of code&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;h2&gt;&lt;a href=&quot;https://github.com/ConradIrwin/pry-rescue&quot;&gt;Pry-rescue&lt;/a&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;from the author of this gem&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;quot;start a pry session when something goes wrong&amp;quot;&lt;/p&gt;

&lt;p&gt;this is actually a two parter&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;gem install pry-rescue
gem install pry-stack_explorer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;both must be installed to work properly
* #### Try&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;rescue &amp;lt;problematic ruby file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;and yes it can be used with rails&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;rescue rails s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 19 Aug 2014 17:56:45 -0600</pubDate>
        <link>http://HoffsMH.github.io/blog/pry-neatos/</link>
        <guid isPermaLink="true">http://HoffsMH.github.io/blog/pry-neatos/</guid>
        
        
        <category>tool</category>
        
      </item>
    
  </channel>
</rss>
